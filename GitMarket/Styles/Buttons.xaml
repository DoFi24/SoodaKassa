<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Styles/ButtonImageIcons.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="Button" x:Key="CheckButton">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="#40CC6F"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="220"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Name="ButtonBorder" BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Button.Background}" 
                            CornerRadius="25">
                        <TextBlock TextAlignment="Center" Margin="0 0 0 6" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{TemplateBinding Button.Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect  BlurRadius="25" ShadowDepth="0" Opacity="0.65" Color="#4AD178"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Opacity" Value=".8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- по умолчанию, uid = 0 cиний, 1 - красный 2 - зеленый -->
    <Style TargetType="{x:Type Button}" x:Key="DefaultButton">
        <Setter Property="Uid" Value="0"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border CornerRadius="8"
                        Background="{TemplateBinding Button.Background}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        BorderBrush="{TemplateBinding BorderBrush}">
                        <TextBlock Name="BtnContent" FontSize="{TemplateBinding Button.FontSize}" Text="{TemplateBinding Button.Content}" Style="{DynamicResource ButtonTextBlock}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="FontSize" Value="18"/>
                            <Setter TargetName="BtnContent" Property="TextBlock.FontWeight" Value="Bold"/>
                        </Trigger>
                        <Trigger Property="Uid" Value="0">
                            <Setter Property="Background" Value="#3B9AAF"/>
                        </Trigger>
                        <Trigger Property="Uid" Value="1">
                            <Setter Property="Background" Value="#FF5A5A"/>
                        </Trigger>
                        <Trigger Property="Uid" Value="2">
                            <Setter Property="Background" Value="#4AD178"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="CommentDialogButton">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="100"/>
    </Style>

    <Style TargetType="Button" x:Key="PaymentEndDialogButton">
        <Setter Property="Margin" Value="9 7.5 9 7.5"/>
        <Setter Property="Width" Value="180" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Height" Value="75" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Name="ButtonBorder" BorderThickness="{TemplateBinding BorderThickness}" 
                                        BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Button.Background}" CornerRadius="6">
                        <TextBlock TextAlignment="Center" Margin="0 0 0 6" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                               Text="{TemplateBinding Button.Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect  BlurRadius="25" ShadowDepth="0" Opacity="0.65" Color="#4AD178"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="DeleteProductDialogButton">
        <Setter Property="Margin" Value="8 10 8 15"/>
        <Setter Property="Background" Value="#3B9AAE"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Width" Value="100" />
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="4">

                        <TextBlock TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{TemplateBinding Button.Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="Button" x:Key="DiscountDialogButton">
        <Setter Property="Margin" Value="10 0 0 0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Width" Value="120" />
        <Setter Property="Height" Value="40" />
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" CornerRadius="15">
                        <TextBlock TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{TemplateBinding Button.Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Кнопки для меню, uid это картинки -->
    <Style TargetType="{x:Type Button}" x:Key="MenuButton">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0 10 0 10"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="{TemplateBinding Button.Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <Image Name="BtnImage" Height="26" Width="26"/>
                        <TextBlock Foreground="{TemplateBinding Button.Foreground}" Text="{TemplateBinding Button.Content}" Style="{DynamicResource ButtonTextBlock}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Uid" Value="0">
                            <!--<Setter TargetName="BtnImage" Property="Image.Source" Value="{x:Null}"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Кнопка для паролей -->
    <Style TargetType="{x:Type Button}" x:Key="PasswordButton">
        <Setter Property="Uid" Value="0"/>
        <Setter Property="Opacity" Value="0.7"/>
        <Setter Property="Margin" Value="16 10 16 10"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="BorderBrush" Value="#CDD0CD"/>
        <Setter Property="BorderThickness" Value="8"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Name="BtnBorder"
                        CornerRadius="30"
                        Background="{TemplateBinding Button.Background}"
                        BorderBrush="{TemplateBinding Button.BorderBrush}"
                        BorderThickness="{TemplateBinding Button.BorderThickness}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Uid" Value="0">
                            <Setter Property="Background" Value="White"/>
                        </Trigger>
                        <Trigger Property="Uid" Value="1">
                            <Setter Property="Background" Value="#CDD0CD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Кнопка удаления -->
    <Style TargetType="{x:Type Button}" x:Key="DeleteButton">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Padding="5">
                        <Image Source="/Resources/DefaultIcons/cancel.png"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TextBlock для кнопок -->
    <Style TargetType="{x:Type TextBlock}" x:Key="ButtonTextBlock">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="Button" x:Key="sa">
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border CornerRadius="4" Style="{DynamicResource Buttonborder}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" Text="{TemplateBinding Button.Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Иконки для кнопок меню -->
    <!--<BitmapImage x:Key="0" UriSource="" />-->
    
    <Style TargetType="Button" x:Key="PayDialogButton">
        <Setter Property="Background" Value="#3B9AAE"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Width" Value="135" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="4">

                        <TextBlock TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{TemplateBinding Button.Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>

        </Setter>
    </Style>

    <!--<BitmapImage x:Key="0" UriSource="" />-->

    <Style TargetType="Button" x:Key="MenuItemsButton">
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="#40CC6F" />
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="Height" Value="55"/>
        <Setter Property="Margin" Value="4 10 4 0"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding Button.Background}" Margin="{TemplateBinding Margin}"
                            BorderThickness="{TemplateBinding Button.BorderThickness}" CornerRadius="5"
                            BorderBrush="{TemplateBinding Button.BorderBrush}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Image Margin="10 5 10 5" SnapsToDevicePixels="False" Stretch="Uniform" Name="limgButton"/>
                            <Image Margin="10 5 10 5" SnapsToDevicePixels="False"  Stretch="Uniform" Name="imgButton"/>
                            <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="center" Content="{TemplateBinding Button.Content}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Uid" Value="0" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="limgButton" Property="Visibility" Value="Collapsed"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Uid" Value="1" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="imgButton" Property="Visibility" Value="Collapsed"/>
                                <Setter Property="Background" Value="#3E9BAF" />
                                <Setter Property="Foreground" Value="White" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Uid" Value="2" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="imgButton" Property="Visibility" Value="Collapsed"/>
                                <Setter Property="Background" Value="#3E9BAF" />
                                <Setter Property="Foreground" Value="White" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Uid" Value="3" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="imgButton" Property="Visibility" Value="Collapsed"/>
                                <Setter Property="Background" Value="#3E9BAF" />
                                <Setter Property="Foreground" Value="White" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Uid" Value="4" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="imgButton" Property="Visibility" Value="Collapsed"/>
                                <Setter Property="Background" Value="#3E9BAF" />
                                <Setter Property="Foreground" Value="White" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Uid" Value="5" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="imgButton" Property="Visibility" Value="Collapsed"/>
                                <Setter Property="Background" Value="#3E9BAF" />
                                <Setter Property="Foreground" Value="White" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Uid" Value="6" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="imgButton" Property="Visibility" Value="Collapsed"/>
                                <Setter Property="Background" Value="#3E9BAF" />
                                <Setter Property="Foreground" Value="White" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Uid" Value="7" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="imgButton" Property="Visibility" Value="Collapsed"/>
                                <Setter Property="Background" Value="#3E9BAF" />
                                <Setter Property="Foreground" Value="White" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Uid" Value="8" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="imgButton" Property="Visibility" Value="Collapsed"/>
                                <Setter Property="Background" Value="#3E9BAF" />
                                <Setter Property="Foreground" Value="white" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="Uid" Value="0" >
                            <Setter TargetName="imgButton" Property="Source" Value="{StaticResource Uid0}"/>
                            <Setter TargetName="limgButton" Property="Source" Value="{StaticResource lUid0}"/>
                        </Trigger>
                        <Trigger Property="Uid" Value="1" >
                            <Setter TargetName="imgButton" Property="Source" Value="{StaticResource Uid1}"/>
                            <Setter TargetName="limgButton" Property="Source" Value="{StaticResource lUid1}"/>
                        </Trigger>
                        <Trigger Property="Uid" Value="2" >

                            <Setter TargetName="imgButton" Property="Image.Source" Value="{StaticResource Uid2}"/>
                            <Setter TargetName="limgButton" Property="Source" Value="{StaticResource lUid2}"/>

                        </Trigger>
                        <Trigger Property="Uid" Value="3" >
                            <Setter TargetName="imgButton" Property="Image.Source" Value="{StaticResource Uid3}"/>
                            <Setter TargetName="limgButton" Property="Source" Value="{StaticResource lUid4}"/>

                        </Trigger>
                        <Trigger Property="Uid" Value="4" >
                            <Setter TargetName="imgButton" Property="Image.Source" Value="{StaticResource Uid4}"/>
                            <Setter TargetName="limgButton" Property="Source" Value="{StaticResource lUid4}"/>

                        </Trigger>
                        <Trigger Property="Uid" Value="5" >
                            <Setter TargetName="imgButton" Property="Image.Source" Value="{StaticResource Uid5}"/>
                            <Setter TargetName="limgButton" Property="Source" Value="{StaticResource lUid6}"/>

                        </Trigger>
                        <Trigger Property="Uid" Value="6" >
                            <Setter TargetName="imgButton" Property="Image.Source" Value="{StaticResource Uid6}"/>
                            <Setter TargetName="limgButton" Property="Source" Value="{StaticResource lUid7}"/>

                        </Trigger>
                        <Trigger Property="Uid" Value="7" >
                            <Setter TargetName="imgButton" Property="Image.Source" Value="{StaticResource Uid7}"/>
                            <Setter TargetName="limgButton" Property="Source" Value="{StaticResource lUid7}"/>

                        </Trigger>
                        <Trigger Property="Uid" Value="8" >
                            <Setter TargetName="imgButton" Property="Image.Source" Value="{StaticResource Uid8}"/>
                            <Setter TargetName="limgButton" Property="Source" Value="{StaticResource lUid8}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="SalePageButton">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Background" Value="#2B2A2A"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="4" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Opacity" Value="0.8" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.6" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="SpecialDiscountDialogButton">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="100"/>
    </Style>
</ResourceDictionary>