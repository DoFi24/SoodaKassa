<Window x:Class="GitMarket.Views.MainWindows.MainNavigationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:icon="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:GitMarket.ViewModels.WindowsViewModels"
        mc:Ignorable="d"
        AllowsTransparency="True"
        d:DataContext="{d:DesignInstance vm:MainNavigationWindowViewModel}"
        Title="{Binding WindowTitle}" Height="800" Width="1200" MouseDown="Window_MouseDown"
        WindowStyle="None" WindowStartupLocation="CenterScreen"  Icon="/Resources/Base/logo2.png"
        WindowState="Maximized" Background="{x:Null}" KeyUp="Window_KeyUp" Loaded="Window_Loaded">
    <Border BorderBrush="Black" BorderThickness="1" Background="Transparent">
        <Grid Background="Transparent">
            <Grid.RowDefinitions>
                <RowDefinition Height="60" />
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>
            <Grid Background="#40CC6F">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1.6*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Orientation="Horizontal">
                    <Button Margin="25 5 0 0" VerticalAlignment="Center" 
                            IsTabStop="False" Background="{x:Null}" BorderThickness="0"
                            Height="50" Width="50" Grid.RowSpan="2"  HorizontalAlignment="Left" 
                            Command="{Binding OpenMenuCommand}" Grid.Column="0">
                        <icon:PackIcon Height="40" Width="40" Kind="Menu" Foreground="White"/>
                    </Button>
                    <StackPanel Margin="25 5 0 0" VerticalAlignment="Center">
                        <Border CornerRadius="5" Background="White">
                            <StackPanel Margin="3" Orientation="Horizontal">
                                <TextBox IsTabStop="False" x:Name="textBoxSearch"
                                 Focusable="{Binding IsFocusTextSearch}" BorderThickness="0"
                                 Padding="10 3" FontSize="15" Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"
                                    Width="320" Height="30"/>
                                <Button IsTabStop="False" Margin="-30 0 0 0" Command="{Binding SearchByTextCommand}" Padding="0"
                                BorderThickness="0" Width="25" Height="25" Background="Transparent">
                                    <icon:PackIcon HorizontalAlignment="Center" 
                                           Foreground="DarkBlue" Width="25" Height="25" Kind="Search"/>
                                </Button>
                            </StackPanel>
                        </Border>
                        <Popup Style="{x:Null}" IsOpen="{Binding IsOpenPopup}" Width="320" MaxHeight="200">
                            <Grid Width="320" Style="{x:Null}" Height="200" Background="White">
                                <DataGrid AlternatingRowBackground="Transparent"
                          ColumnHeaderStyle="{DynamicResource hederstyle_Kuxne}"
                          Background="White" Height="Auto" RowHeight="35"                           
                          ItemsSource="{Binding SearchProductCollection,UpdateSourceTrigger=PropertyChanged}"
                          MaxHeight="200" SelectedItem="{Binding SearchSelectedProduct}"
                          Style="{DynamicResource SalePageDataGrid_2}">
                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn Width="*" Header="Наименование" >
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock FontSize="15" Margin="5 0 0 0" Foreground="Black" Text="{Binding Product_Name}"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Width="*" Header="Цена" >
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock FontSize="15" HorizontalAlignment="Center" Foreground="Black" Text="{Binding Sale_Price}"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>
                        </Popup>
                    </StackPanel>
                    <TextBlock Margin="20 0 0 0" Text="20 20 2000" x:Name="DateTextBlock" FontSize="22" Foreground="White" VerticalAlignment="Center"/>
                    <!--<TextBlock MouseLeftButtonDown="TextBlock_MouseLeftButtonDown" Padding="26 4 0 0" Margin="0 0 0 0" Grid.Column="2" Text="Меню" FontWeight="DemiBold" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" FontSize="16"/>-->
                </StackPanel>
                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="1.5*" />
                    </Grid.ColumnDefinitions>
                    <ComboBox   Height="30" Style="{DynamicResource ComboBoxStyle1}" Background="Transparent"
                                HorizontalAlignment="Right" IsTabStop="False" x:Name="WindowComboBox"
                                FontSize="12" Foreground="Gray" FontWeight="DemiBold" Width="150"
                                HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                                DropDownClosed="WindowComboBox_DropDownClosed" BorderBrush="White">
                        <ComboBoxItem Content="КАССА 1"/>
                        <ComboBoxItem Content="КАССА 2"/>
                    </ComboBox>
                    <TextBlock Grid.Column="1" HorizontalAlignment="Left"  Foreground="#5F6FA4"
                               Margin="2 0 2 0" 
                               Text="{Binding UserName}" FontWeight="DemiBold"
                            VerticalAlignment="Center" FontSize="16"/>
                    <StackPanel Grid.Column="3" HorizontalAlignment="Right" Orientation="Horizontal">
                        <Button HorizontalAlignment="Center"  IsTabStop="False"  Margin="10 0 0 0"
                            Background="{x:Null}" Command="{Binding LockWindowCommand}" 
                            Uid="9" BorderThickness="0" Height="25">
                            <icon:PackIcon Foreground="White" Width="20" Height="20" Kind="Lock" />
                            <!--<Image HorizontalAlignment="Left"  Source="/Resources/DefaultIcons/lock.png"/>-->
                        </Button>
                        <Button HorizontalAlignment="Center"  IsTabStop="False"  Margin="10 0 0 0"
                            Background="{x:Null}" Height="25" Width="25"
                            Click="Button_Click" BorderThickness="0">
                            <icon:PackIcon Foreground="White" Width="20" Height="20"  Kind="WindowMinimize" />
                            <!--<Image Grid.Column="3" Uid="1"  Source="/Resources/DefaultIcons/subtract.png"/>-->
                        </Button>
                        <Button HorizontalAlignment="Center"  IsTabStop="False" 
                            Background="{x:Null}" Height="25" Click="Button_Click_Minimize"
                            BorderThickness="0"  Width="25">
                            <icon:PackIcon Foreground="White" Width="20" Height="20"  Kind="WindowMaximize" />
                            <!--<Image Uid="2" Source="/Resources/DefaultIcons/restore.png"/>-->
                        </Button>
                        <Button HorizontalAlignment="Right"  IsTabStop="False" 
                            Command="{Binding CloseApplicationCommand}" Margin="0 0 10 0"
                            Background="{x:Null}" Height="25" Width="25" BorderThickness="0" >
                            <icon:PackIcon Foreground="White"  Width="20" Height="20" Kind="Close" />
                            <!--<Image Uid="3" Source="/Resources/DefaultIcons/close.png"/>-->
                        </Button>
                    </StackPanel>
                </Grid>
            </Grid>
            <Grid Grid.Row="1" Panel.ZIndex="0">
                <Grid Background="White">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="300" />
                    </Grid.ColumnDefinitions>
                    <Grid>
                        <Grid.Resources>
                            <Style TargetType="TextBlock" x:Key="CenterText">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="FontSize" Value="18" />
                                <Setter Property="Foreground" Value="#140021" />
                            </Style>
                        </Grid.Resources>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding HotKeyGridVisibility,UpdateSourceTrigger=PropertyChanged}" />
                                <ColumnDefinition Width="3*" />
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30" />
                                    <RowDefinition Height="1*" />
                                </Grid.RowDefinitions>
                                <TextBlock Text="Горячие клавиши" Margin="0 10 0 0"
                                           HorizontalAlignment="Center" FontWeight="DemiBold" />
                                <DataGrid Margin="3" Grid.Row="1" IsReadOnly="True" Style="{DynamicResource HotKeyDataGrid}"
                                          ItemsSource="{Binding HotKeyCollection,UpdateSourceTrigger=PropertyChanged}" >
                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn IsReadOnly="True" Width="2*" Header="Наименование">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Viewbox HorizontalAlignment="Left">
                                                        <TextBlock Foreground="Black" FontWeight="DemiBold" HorizontalAlignment="Left" TextAlignment="Left" Text="{Binding Product_Name}"  VerticalAlignment="Center"/>
                                                    </Viewbox>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn Width="*" IsReadOnly="True"  Header="Клавиша">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Foreground="Black" FontWeight="DemiBold" HorizontalAlignment="Center" TextAlignment="Center" Text="{Binding Key}" VerticalAlignment="Center"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>
                            <DataGrid Grid.Column="1" RowStyle="{DynamicResource SaleDataGridRow}" 
                                      Style="{DynamicResource SalePageDataGrid_2}" Background="Transparent"
                                      IsTabStop="False" Width="Auto" 
                                      ColumnHeaderStyle="{DynamicResource hederstyle_Kuxne}"
                                      ItemsSource="{Binding FakeInfoCollection, UpdateSourceTrigger=PropertyChanged}">
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn IsReadOnly="True" Header=" " Width="2*">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Style="{DynamicResource CenterText}" Text="{Binding}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                            <DataGrid Grid.Column="1" RowStyle="{DynamicResource SaleDataGridRow}" 
                                      Style="{DynamicResource SalePageDataGrid_2}" Background="Transparent"
                                      SelectedIndex="{Binding SelectedProductIndex,UpdateSourceTrigger=PropertyChanged}"
                                      x:Name="DataGridKassaReal" IsTabStop="False"
                                      Width="Auto"
                                      ColumnHeaderStyle="{DynamicResource hederstyle_Kuxne}"
                                      ItemsSource="{Binding SelectedProductsCollection, UpdateSourceTrigger=PropertyChanged}"
                                      SelectedItem="{Binding SelectedProductItem, UpdateSourceTrigger=PropertyChanged}">

                                <DataGrid.Columns>
                                    <DataGridTemplateColumn IsReadOnly="True" Header="Наименование" Width="2*">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Style="{DynamicResource CenterText}" Text="{Binding Product_Name}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn  IsReadOnly="True" Header="Цена" Width="*">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Style="{DynamicResource CenterText}"  Text="{Binding Sale_Price,StringFormat=0.00}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn  Width="*" Header="Количество">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button IsTabStop="False" FontSize="18" Background="Transparent" BorderThickness="0" 
                                                        CommandParameter="{Binding IsUnpack}"
                                            Command="{Binding DataContext.ChangeProductQuantityCommand,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type DataGrid}}}" 
                                            Content="{Binding QuantityCount,StringFormat=0.00}" HorizontalContentAlignment="Center"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <DataGridTemplateColumn  IsReadOnly="True" Header="Итого" Width="*">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Foreground="Black" Style="{DynamicResource CenterText}"  Text="{Binding Itog,StringFormat=0.00}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </Grid>
                    <Grid Grid.Column="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.Resources>
                            <Style TargetType="TextBox" BasedOn="{StaticResource SalePageTextBox}">
                                <Setter Property="BorderThickness" Value="0 0 0 .6" />
                                <Setter Property="BorderBrush" Value="DarkBlue" />
                            </Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource SalePageTextBlock}"/>
                        </Grid.Resources>
                        <StackPanel Margin="0 20 0 0" Grid.Row="0">
                            <StackPanel Margin="20 5 0 0" Orientation="Horizontal">
                                <icon:PackIcon Kind="Receipt"  Width="20" Height="20"/>
                                <TextBlock  Margin="10 0 0 0" Style="{DynamicResource SalePageTextBlock}" Text="Итого:"/>
                            </StackPanel>
                            <TextBox x:Name="itogTextBox" Margin="10 0 10 0" Text="{Binding ReceiptPrice,  StringFormat=N2}"/>
                            <StackPanel Margin="20 5 0 0" Orientation="Horizontal">
                                <icon:PackIcon Kind="Percent"  Width="20" Height="20"/>
                                <TextBlock Margin="10 0 0 0" Style="{DynamicResource SalePageTextBlock}" Text="Скидка:"/>
                            </StackPanel>
                            <TextBox IsTabStop="False" Margin="10 0 10 0" Text="{Binding ReceiptDiscount,  StringFormat=N2}"/>
                            <StackPanel Margin="20 5 0 0" Orientation="Horizontal">
                                <icon:PackIcon Kind="Money"  Width="20" Height="20"/>
                                <TextBlock Margin="10 0 0 0" Style="{DynamicResource SalePageTextBlock}"  Text="Оплачено (Наличный):"/>
                            </StackPanel>
                            <TextBox PreviewTextInput="PaidTextBox_PreviewTextInput" 
                                     TabIndex="0" x:Name="PaidTextBox" IsReadOnly="False" 
                                     Margin="10 0 10 0" Text="{Binding ReceiptPaid,UpdateSourceTrigger=PropertyChanged}"/>
                            <StackPanel Margin="20 5 0 0" Orientation="Horizontal">
                                <icon:PackIcon Kind="CreditCard" Width="20" Height="20"/>
                                <TextBlock Margin="10 0 0 0" Style="{DynamicResource SalePageTextBlock}" Text="Оплачено (Картой):"/>
                            </StackPanel>
                            <TextBox PreviewTextInput="PaidTextBox_PreviewTextInput"  
                                     TabIndex="1" IsReadOnly="False" Margin="10 0 10 0"
                                     Text="{Binding ReceiptPaidCard,UpdateSourceTrigger=PropertyChanged}"/>
                            <StackPanel Margin="20 5 0 0" Orientation="Horizontal">
                                <icon:PackIcon Kind="CashReturn"  Width="20" Height="20"/>
                                <TextBlock Margin="10 0 0 0" Style="{DynamicResource SalePageTextBlock}" Text="Сдача:"/>
                            </StackPanel>
                            <TextBox  IsTabStop="False" Margin="10 0 10 0" Text="{Binding ReceiptOverpay,  StringFormat=N2}"/>
                        </StackPanel>
                        <Grid Margin="0 0 0 25" Grid.Row="4" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <StackPanel>
                                <StackPanel.Resources>
                                    <Style TargetType="Button" BasedOn="{StaticResource SalePageButton}">
                                        <Setter Property="FontSize" Value="13" />
                                    </Style>
                                </StackPanel.Resources>
                                <Grid Width="250">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                    </Grid.RowDefinitions>
                                    <Button  IsTabStop="False" Background="#40CC6F" Height="50" FontSize="15" Content="Оплатить (+)" Command="{Binding ToPayCommand}" Grid.Row="0"/>
                                    <Button  IsTabStop="False" x:Name="Btn1" Background="#40CC6F" Height="50" FontSize="14" Content="Бонус и скидка (-)" Command="{Binding GetBonusCommand}" Grid.Row="1"/>
                                    <!--<Button Background="#3B9AAE" Height="40" Content="Напечатать чек&#x0a; ()" Command="{Binding CheckPaymentEndCommand}" Grid.Row="3"/>-->
                                    <!--<Button  IsTabStop="False" Background="#9F40CC"
                                             Height="50" FontSize="15" Content="UDS"
                                             Command="{Binding UDSSettingsCommand}" Grid.Row="2"/>-->
                                    <Button  IsTabStop="False" Background="#FE5555" Height="50" FontSize="15" Content="    Очистить&#x0a; (Ctrl + Delete)" Command="{Binding ClearSelectedProductsCommand}" Grid.Row="5"/>
                                </Grid>
                            </StackPanel>
                        </Grid>
                    </Grid>
                </Grid>
            </Grid>
            <Grid Background="White" Visibility="{Binding MenuGridVisibility}" x:Name="MenuGrid"
                  Grid.RowSpan="2" Width="300"  HorizontalAlignment="Left">
                <Border BorderThickness="0 0 .5 0" BorderBrush="Black">
                    <Grid Margin="4">
                        <!--{Binding MenuGridVisibility}-->
                        <Button Padding="-2" BorderThickness="0" Background="Transparent" Width="35" Height="35" 
                        Command="{Binding OpenMenuCommand}" HorizontalAlignment="Right" VerticalAlignment="Top">
                            <Image Source="/Resources/DefaultIcons/multiply.png"/>
                        </Button>
                        <StackPanel Margin="0 35 0 0">
                            <StackPanel.Resources>
                                <Style TargetType="Button" BasedOn="{StaticResource MenuItemsButton}">
                                    <Setter Property="Command" Value="{Binding ChangePageCommand}" />
                                    <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}, Path=Uid}" />
                                </Style>
                            </StackPanel.Resources>
                            <Button Background="#40CC6F" Foreground="White" Uid="0" Content="Касса"/>
                            <Button Uid="1" Content="Товары"/>
                            <!--<Button Uid="2" Content="Возврат"/>-->
                            <!--<Button Uid="3" Content="В магазине"/>
                    <Button Uid="4" Content="Заявки"/>
                    <Button Uid="5" Content="История чеков"/>
                    <Button Uid="6" Content="Акт-Прием товаров"/>
                    <Button Uid="7" Content="Передать магазину"/>-->
                            <Button Uid="7" Content="Услуги"/>
                            <Button Uid="4" Content="История чеков"/>
                            <Button Uid="2" Content="Горячие клавиши"/>
                            <Button Uid="8" Content="Настройки"/>
                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
    </Border>
</Window>
